// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Oi.Juridico.Contextos.V2.AgendaAudienciaContext.Data;
using Oi.Juridico.Contextos.V2.AgendaAudienciaContext.Entities;
using System;
using System.Collections.Generic;

namespace Oi.Juridico.Contextos.V2.AgendaAudienciaContext.Data.Configurations
{
    public partial class AudienciaProcessoConfiguration : IEntityTypeConfiguration<AudienciaProcesso>
    {
        public void Configure(EntityTypeBuilder<AudienciaProcesso> entity)
        {
            entity.HasKey(e => new { e.CodProcesso, e.SeqAudiencia });

            entity.ToTable("AUDIENCIA_PROCESSO");

            entity.HasIndex(e => new { e.CodProcesso, e.DatAudiencia }, "AUPR_IX_01");

            entity.HasIndex(e => new { e.DatAudiencia, e.CodProcesso, e.SeqAudiencia }, "AUPR_IX_02");

            entity.HasIndex(e => e.CodProcesso, "AUPR_PROC_01_IX");

            entity.HasIndex(e => e.CodStatusAudiencia, "IDX$$_06630001_3CON");

            entity.Property(e => e.CodProcesso)
                .HasPrecision(8)
                
                .HasColumnName("COD_PROCESSO");

            entity.Property(e => e.SeqAudiencia)
                .HasPrecision(4)
                
                .HasColumnName("SEQ_AUDIENCIA");

            entity.Property(e => e.AdvesCodAdvogado)
                .HasPrecision(4)
                
                .HasColumnName("ADVES_COD_ADVOGADO");

            entity.Property(e => e.AdvesCodAdvogadoAcomp)
                .HasPrecision(4)
                
                .HasColumnName("ADVES_COD_ADVOGADO_ACOMP");

            entity.Property(e => e.AdvesCodProfissional)
                .HasPrecision(6)
                
                .HasColumnName("ADVES_COD_PROFISSIONAL");

            entity.Property(e => e.AdvesCodProfissionalAcomp)
                .HasPrecision(6)
                
                .HasColumnName("ADVES_COD_PROFISSIONAL_ACOMP");

            entity.Property(e => e.ApuracaoSofreuNovaAnalise)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("APURACAO_SOFREU_NOVA_ANALISE")
                .IsFixedLength();

            entity.Property(e => e.CodAlocacaoPreposto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .ValueGeneratedOnAdd()
                .HasColumnName("COD_ALOCACAO_PREPOSTO")
                .IsFixedLength();

            entity.Property(e => e.CodDetalhamentoApuracao)
                .HasPrecision(6)
                
                .HasColumnName("COD_DETALHAMENTO_APURACAO");

            entity.Property(e => e.CodMotivoApuracao)
                .HasPrecision(6)
                
                .HasColumnName("COD_MOTIVO_APURACAO");

            entity.Property(e => e.CodPreposto)
                .HasPrecision(6)
                
                .HasColumnName("COD_PREPOSTO");

            entity.Property(e => e.CodPrepostoAcomp)
                .HasPrecision(6)
                
                .HasColumnName("COD_PREPOSTO_ACOMP");

            entity.Property(e => e.CodResultadoApuracao)
                .HasPrecision(6)
                
                .HasColumnName("COD_RESULTADO_APURACAO");

            entity.Property(e => e.CodStatusAudiencia)
                .HasPrecision(4)
                
                .HasColumnName("COD_STATUS_AUDIENCIA");

            entity.Property(e => e.CodTipoAud)
                .HasPrecision(4)
                
                .HasColumnName("COD_TIPO_AUD");

            entity.Property(e => e.CodUsuarioIndRequerPrep)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("COD_USUARIO_IND_REQUER_PREP");

            entity.Property(e => e.Comentario)
                .IsUnicode(false)
                .HasColumnName("COMENTARIO");

            entity.Property(e => e.DatAudiencia)
                .HasColumnType("DATE")
                
                .HasColumnName("DAT_AUDIENCIA");

            entity.Property(e => e.DatHorIndRequerPrep)
                .HasColumnType("DATE")
                .HasColumnName("DAT_HOR_IND_REQUER_PREP");

            entity.Property(e => e.DatInfoAlocacaoPreposto)
                .HasPrecision(6)
                .ValueGeneratedOnAdd()
                .HasColumnName("DAT_INFO_ALOCACAO_PREPOSTO");

            entity.Property(e => e.DatTerceirizado)
                .HasColumnType("DATE")
                
                .HasColumnName("DAT_TERCEIRIZADO");

            entity.Property(e => e.DataCadastro)
                .HasColumnType("DATE")
                
                .HasColumnName("DATA_CADASTRO");

            entity.Property(e => e.HorAudiencia)
                .HasColumnType("DATE")
                
                .HasColumnName("HOR_AUDIENCIA");

            entity.Property(e => e.IndAcessoRestrito)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                
                .HasColumnName("IND_ACESSO_RESTRITO")
                .HasDefaultValueSql("'N' ")
                .IsFixedLength();

            entity.Property(e => e.IndRequerPreposto)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("IND_REQUER_PREPOSTO")
                .HasDefaultValueSql("'N' ")
                .IsFixedLength();

            entity.Property(e => e.IndTerceirizado)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                
                .HasColumnName("IND_TERCEIRIZADO")
                .HasDefaultValueSql("'N' ")
                .IsFixedLength();

            entity.Property(e => e.IndTerceiroCompareceu)
                .HasMaxLength(1)
                .IsUnicode(false)
                
                .HasColumnName("IND_TERCEIRO_COMPARECEU")
                .IsFixedLength();

            entity.Property(e => e.Link)
                .IsUnicode(false)
                
                .HasColumnName("LINK");

            entity.Property(e => e.NomConciliadorJuiz)
                .HasMaxLength(400)
                .IsUnicode(false)
                
                .HasColumnName("NOM_CONCILIADOR_JUIZ");

            entity.Property(e => e.NomSala)
                .HasMaxLength(20)
                .IsUnicode(false)
                
                .HasColumnName("NOM_SALA");

            entity.Property(e => e.NomeColaboradorFunc)
                .HasMaxLength(100)
                .IsUnicode(false)
                
                .HasColumnName("NOME_COLABORADOR_FUNC");

            entity.HasOne(d => d.AdvesCodProfissionalAcompNavigation)
                .WithMany(p => p.AudienciaProcesso)
                .HasForeignKey(d => d.AdvesCodProfissionalAcomp)
                .HasConstraintName("AUDPR_ADVES_PROF_ACOMP_FK");

            entity.HasOne(d => d.CodPrepostoNavigation)
                .WithMany(p => p.AudienciaProcessoCodPrepostoNavigation)
                .HasForeignKey(d => d.CodPreposto)
                .HasConstraintName("FK_PREPOSTO_AUDIENCIA_PROC");

            entity.HasOne(d => d.CodPrepostoAcompNavigation)
                .WithMany(p => p.AudienciaProcessoCodPrepostoAcompNavigation)
                .HasForeignKey(d => d.CodPrepostoAcomp)
                .HasConstraintName("FK_PREPOSTO_ACOMP_AUDIENC_PROC");

            entity.HasOne(d => d.CodProcessoNavigation)
                .WithMany(p => p.AudienciaProcesso)
                .HasForeignKey(d => d.CodProcesso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PROCESSO_AUDIENCIA");

            entity.HasOne(d => d.CodTipoAudNavigation)
                .WithMany(p => p.AudienciaProcesso)
                .HasForeignKey(d => d.CodTipoAud)
                .HasConstraintName("FK_TIPO_AUDIENCIA_PROCESSO");

            entity.HasOne(d => d.AdvesCod)
                .WithMany(p => p.AudienciaProcessoAdvesCod)
                .HasForeignKey(d => new { d.AdvesCodProfissional, d.AdvesCodAdvogado })
                .HasConstraintName("AUDPR_ADVES_FK");

            entity.HasOne(d => d.AdvesCodNavigation)
                .WithMany(p => p.AudienciaProcessoAdvesCodNavigation)
                .HasForeignKey(d => new { d.AdvesCodProfissionalAcomp, d.AdvesCodAdvogadoAcomp })
                .HasConstraintName("AUDPR_ADVES_ACOMP_FK");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<AudienciaProcesso> entity);
    }
}
