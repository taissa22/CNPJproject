// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Oi.Juridico.Contextos.V2.ControleDeAcessoContext.Data;
using Oi.Juridico.Contextos.V2.ControleDeAcessoContext.Entities;
using System;
using System.Collections.Generic;

namespace Oi.Juridico.Contextos.V2.ControleDeAcessoContext.Data.Configurations
{
    public partial class MenuConfiguration : IEntityTypeConfiguration<Menu>
    {
        public void Configure(EntityTypeBuilder<Menu> entity)
        {
            entity.ToTable("MENU");

            entity.HasIndex(e => e.Ordem, "UK_MENU_ORDEM")
                .IsUnique();

            entity.Property(e => e.Id)
                .HasPrecision(10)
                .HasColumnName("ID");

            entity.Property(e => e.Icone)
                .HasMaxLength(50)
                .HasColumnName("ICONE");

            entity.Property(e => e.Nome)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("NOME");

            entity.Property(e => e.Ordem)
                .HasPrecision(5)
                .HasColumnName("ORDEM");

            entity.Property(e => e.ParentId)
                .HasPrecision(10)
                .HasColumnName("PARENT_ID");

            entity.Property(e => e.Url)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("URL");

            entity.HasOne(d => d.Parent)
                .WithMany(p => p.InverseParent)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK_MENU_PARENT_MENU");

            entity.HasMany(d => d.Cod)
                .WithMany(p => p.Menu)
                .UsingEntity<Dictionary<string, object>>(
                    "MenuPermissao",
                    l => l.HasOne<AcaMenu>().WithMany().HasForeignKey("CodAplicacao", "CodMenu").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_MENU_PERMISSAO_ACA_MENU"),
                    r => r.HasOne<Menu>().WithMany().HasForeignKey("MenuId").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_MENU_PERMISSAO_MENU"),
                    j =>
                    {
                        j.HasKey("MenuId", "CodAplicacao", "CodMenu");

                        j.ToTable("MENU_PERMISSAO");

                        j.IndexerProperty<int>("MenuId").HasPrecision(10).HasColumnName("MENU_ID");

                        j.IndexerProperty<string>("CodAplicacao").HasMaxLength(4).IsUnicode(false).HasColumnName("COD_APLICACAO");

                        j.IndexerProperty<string>("CodMenu").HasMaxLength(40).IsUnicode(false).HasColumnName("COD_MENU");
                    });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Menu> entity);
    }
}
