// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Oi.Juridico.Contextos.V2.ESocialContext.Data;
using Oi.Juridico.Contextos.V2.ESocialContext.Entities;
using System;
using System.Collections.Generic;

namespace Oi.Juridico.Contextos.V2.ESocialContext.Data.Configurations
{
    public partial class EsInconsistenciasF2500F2501Configuration : IEntityTypeConfiguration<EsInconsistenciasF2500F2501>
    {
        public void Configure(EntityTypeBuilder<EsInconsistenciasF2500F2501> entity)
        {
            entity.ToTable("ES_INCONSISTENCIAS_F2500_F2501");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasPrecision(10)
                .HasColumnName("ID");

            entity.Property(e => e.Acao)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ACAO");

            entity.Property(e => e.Campotela)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAMPOTELA");

            entity.Property(e => e.CodParte)
                .HasPrecision(10)
                .HasColumnName("COD_PARTE");

            entity.Property(e => e.CodProcesso)
                .HasPrecision(8)
                .HasColumnName("COD_PROCESSO");

            entity.Property(e => e.Codigo)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("CODIGO");

            entity.Property(e => e.DataCreate)
                .HasColumnType("DATE")
                .HasColumnName("DATA_CREATE");

            entity.Property(e => e.IdExecucao)
               .HasPrecision(8)
               .HasColumnName("ID_EXECUCAO");

            entity.Property(e => e.Datahoraprocessamento)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("DATAHORAPROCESSAMENTO");

            entity.Property(e => e.IdF2500)
                .HasPrecision(10)
                .HasColumnName("ID_F2500");

            entity.Property(e => e.IdF2501)
                .HasPrecision(10)
                .HasColumnName("ID_F2501");

            entity.Property(e => e.Inconsistencia)
                .HasMaxLength(400)
                .IsUnicode(false)
                .HasColumnName("INCONSISTENCIA");

            entity.Property(e => e.Localizacao)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("LOCALIZACAO");

            entity.Property(e => e.LogCodUsuario)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("LOG_COD_USUARIO");

            entity.Property(e => e.LogDataOperacao)
                .HasPrecision(6)
                .HasColumnName("LOG_DATA_OPERACAO");

            entity.Property(e => e.NomeArquivoEnviado)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasColumnName("NOME_ARQUIVO_ENVIADO");

            entity.Property(e => e.Sequencial)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("SEQUENCIAL");

            entity.Property(e => e.Tipoinconsistencia)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("TIPOINCONSISTENCIA");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<EsInconsistenciasF2500F2501> entity);
    }
}
